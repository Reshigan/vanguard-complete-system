# Verifi AI Production Docker Compose Configuration
# This configuration is optimized for production deployment

version: '3.8'

services:
  # Main Application Server
  verifi-ai-server:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: verifi-ai-server
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://verifi:${DATABASE_PASSWORD}@verifi-ai-db:5432/verifi_ai
      - REDIS_URL=redis://verifi-ai-redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - ENABLE_ML_WORKER=true
      - SEED_DATABASE=false
      - LOG_LEVEL=info
      - BLOCKCHAIN_NETWORK=${BLOCKCHAIN_NETWORK:-sepolia}
      - BLOCKCHAIN_RPC_URL=${BLOCKCHAIN_RPC_URL}
      - VERIFI_AI_CONTRACT_ADDRESS=${VERIFI_AI_CONTRACT_ADDRESS}
      - BLOCKCHAIN_PRIVATE_KEY=${BLOCKCHAIN_PRIVATE_KEY}
    volumes:
      - verifi-ai-logs:/app/logs
      - verifi-ai-uploads:/app/uploads
      - verifi-ai-temp:/app/temp
    depends_on:
      - verifi-ai-db
      - verifi-ai-redis
    networks:
      - verifi-ai-network
    healthcheck:
      test: ["CMD", "./healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL Database
  verifi-ai-db:
    image: postgres:15-alpine
    container_name: verifi-ai-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=verifi_ai
      - POSTGRES_USER=verifi
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - verifi-ai-db-data:/var/lib/postgresql/data
      - ./server/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - verifi-ai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U verifi -d verifi_ai"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  verifi-ai-redis:
    image: redis:7-alpine
    container_name: verifi-ai-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - verifi-ai-redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - verifi-ai-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Nginx Reverse Proxy
  verifi-ai-nginx:
    image: nginx:alpine
    container_name: verifi-ai-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/production/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./client:/usr/share/nginx/html:ro
      - verifi-ai-ssl-certs:/etc/nginx/ssl
      - verifi-ai-logs:/var/log/nginx
    depends_on:
      - verifi-ai-server
    networks:
      - verifi-ai-network

# Networks
networks:
  verifi-ai-network:
    driver: bridge
    name: verifi-ai-network

# Volumes
volumes:
  verifi-ai-db-data:
    name: verifi-ai-db-data
  verifi-ai-redis-data:
    name: verifi-ai-redis-data
  verifi-ai-logs:
    name: verifi-ai-logs
  verifi-ai-uploads:
    name: verifi-ai-uploads
  verifi-ai-temp:
    name: verifi-ai-temp
  verifi-ai-ssl-certs:
    name: verifi-ai-ssl-certs